<h1 id="CAQH-ProView-RosterAPI">CAQH ProView RosterAPI v2.1</h1>

<blockquote>
<p>Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.</p>
</blockquote>

<p>Base URLs:</p>

<ul>
<li><a href="https://proview.caqh.org/RosterAPI/api/">https://proview.caqh.org/RosterAPI/api/</a></li>
</ul>
<h1 id='authentication'>Authentication</h1>
<ul>
<li>HTTP Authentication, scheme: basic Basic username:password   Encoded base64-encoded (iso-8859-1)</li>
</ul>

<h1 id="CAQH-ProView-RosterAPI-Default">Default</h1>
<h2 id='get-providerstatus'>get-providerstatus</h2>
<p><a id="opIdget-providerstatus"></a></p>

<blockquote>
<p>Code samples</p>
</blockquote>
<pre class="highlight shell tab-shell"><code><span class="c"># You can also use wget</span>
curl -X GET https://proview.caqh.org/RosterAPI/api//ProviderStatus?Product<span class="o">=</span>PV&amp;Caqh_Provider_Id<span class="o">=</span>string&amp;Organization_id<span class="o">=</span>string <span class="se">\</span>
  -H <span class="s1">'Accept: */*'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span>

</code></pre><pre class="highlight http tab-http"><code><span class="nf">GET</span> <span class="nn">https://proview.caqh.org/RosterAPI/api//ProviderStatus?Product=PV&amp;Caqh_Provider_Id=string&amp;Organization_id=string</span> <span class="k">HTTP</span><span class="o">/</span><span class="m">1.1</span>
<span class="na">Host</span><span class="p">:</span> <span class="s">proview.caqh.org</span>

Accept: */*
Content-Type: application/json

</code></pre><pre class="highlight javascript tab-javascript"><code><span class="kd">var</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span><span class="p">:</span><span class="s1">'*/*'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span><span class="p">:</span><span class="s1">'application/json'</span>

<span class="p">};</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
  <span class="na">url</span><span class="p">:</span> <span class="s1">'https://proview.caqh.org/RosterAPI/api//ProviderStatus'</span><span class="p">,</span>
  <span class="na">method</span><span class="p">:</span> <span class="s1">'get'</span><span class="p">,</span>
  <span class="na">data</span><span class="p">:</span> <span class="s1">'?Product=PV&amp;Caqh_Provider_Id=string&amp;Organization_id=string'</span><span class="p">,</span>
  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span><span class="p">,</span>
  <span class="na">success</span><span class="p">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">));</span>
  <span class="p">}</span>
<span class="p">})</span>

</code></pre><pre class="highlight javascript tab-javascript--nodejs"><code><span class="kr">const</span> <span class="nx">request</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'node-fetch'</span><span class="p">);</span>

<span class="kr">const</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span><span class="p">:</span><span class="s1">'*/*'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span><span class="p">:</span><span class="s1">'application/json'</span>

<span class="p">};</span>

<span class="nx">fetch</span><span class="p">(</span><span class="s1">'https://proview.caqh.org/RosterAPI/api//ProviderStatus?Product=PV&amp;Caqh_Provider_Id=string&amp;Organization_id=string'</span><span class="p">,</span>
<span class="p">{</span>
  <span class="na">method</span><span class="p">:</span> <span class="s1">'GET'</span><span class="p">,</span>

  <span class="na">headers</span><span class="p">:</span> <span class="nx">headers</span>
<span class="p">})</span>
<span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">();</span>
<span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">body</span><span class="p">);</span>
<span class="p">});</span>

</code></pre><pre class="highlight ruby tab-ruby"><code><span class="nb">require</span> <span class="s1">'rest-client'</span>
<span class="nb">require</span> <span class="s1">'json'</span>

<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'Accept'</span> <span class="o">=&gt;</span> <span class="s1">'*/*'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">}</span>

<span class="n">result</span> <span class="o">=</span> <span class="no">RestClient</span><span class="p">.</span><span class="nf">get</span> <span class="s1">'https://proview.caqh.org/RosterAPI/api//ProviderStatus'</span><span class="p">,</span>
  <span class="ss">params: </span><span class="p">{</span>
  <span class="s1">'Product'</span> <span class="o">=&gt;</span> <span class="s1">'string'</span><span class="p">,</span>
<span class="s1">'Caqh_Provider_Id'</span> <span class="o">=&gt;</span> <span class="s1">'string'</span><span class="p">,</span>
<span class="s1">'Organization_id'</span> <span class="o">=&gt;</span> <span class="s1">'string'</span>
<span class="p">},</span> <span class="ss">headers: </span><span class="n">headers</span>

<span class="nb">p</span> <span class="no">JSON</span><span class="p">.</span><span class="nf">parse</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>

</code></pre><pre class="highlight python tab-python"><code><span class="kn">import</span> <span class="nn">requests</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'*/*'</span><span class="p">,</span>
  <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">'application/json'</span>
<span class="p">}</span>

<span class="n">r</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">'https://proview.caqh.org/RosterAPI/api//ProviderStatus'</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="p">{</span>
  <span class="s">'Product'</span><span class="p">:</span> <span class="s">'PV'</span><span class="p">,</span>  <span class="s">'Caqh_Provider_Id'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>  <span class="s">'Organization_id'</span><span class="p">:</span> <span class="s">'string'</span>
<span class="p">},</span> <span class="n">headers</span> <span class="o">=</span> <span class="n">headers</span><span class="p">)</span>

<span class="k">print</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>

</code></pre><pre class="highlight java tab-java"><code><span class="n">URL</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="s">"https://proview.caqh.org/RosterAPI/api//ProviderStatus?Product=PV&amp;Caqh_Provider_Id=string&amp;Organization_id=string"</span><span class="o">);</span>
<span class="n">HttpURLConnection</span> <span class="n">con</span> <span class="o">=</span> <span class="o">(</span><span class="n">HttpURLConnection</span><span class="o">)</span> <span class="n">obj</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
<span class="n">con</span><span class="o">.</span><span class="na">setRequestMethod</span><span class="o">(</span><span class="s">"GET"</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">responseCode</span> <span class="o">=</span> <span class="n">con</span><span class="o">.</span><span class="na">getResponseCode</span><span class="o">();</span>
<span class="n">BufferedReader</span> <span class="n">in</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span>
    <span class="k">new</span> <span class="nf">InputStreamReader</span><span class="o">(</span><span class="n">con</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">()));</span>
<span class="n">String</span> <span class="n">inputLine</span><span class="o">;</span>
<span class="n">StringBuffer</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuffer</span><span class="o">();</span>
<span class="k">while</span> <span class="o">((</span><span class="n">inputLine</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">response</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">inputLine</span><span class="o">);</span>
<span class="o">}</span>
<span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>

</code></pre><pre class="highlight go tab-go"><code><span class="k">package</span><span class="x"> </span><span class="n">main</span><span class="x">

</span><span class="k">import</span><span class="x"> </span><span class="p">(</span><span class="x">
       </span><span class="s">"bytes"</span><span class="x">
       </span><span class="s">"net/http"</span><span class="x">
</span><span class="p">)</span><span class="x">

</span><span class="k">func</span><span class="x"> </span><span class="n">main</span><span class="p">()</span><span class="x"> </span><span class="p">{</span><span class="x">

    </span><span class="n">headers</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="k">map</span><span class="p">[</span><span class="kt">string</span><span class="p">][]</span><span class="kt">string</span><span class="p">{</span><span class="x">
        </span><span class="s">"Accept"</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"*/*"</span><span class="p">},</span><span class="x">
        </span><span class="s">"Content-Type"</span><span class="o">:</span><span class="x"> </span><span class="p">[]</span><span class="kt">string</span><span class="p">{</span><span class="s">"application/json"</span><span class="p">},</span><span class="x">

    </span><span class="p">}</span><span class="x">

    </span><span class="n">data</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">bytes</span><span class="o">.</span><span class="n">NewBuffer</span><span class="p">([]</span><span class="kt">byte</span><span class="p">{</span><span class="n">jsonReq</span><span class="p">})</span><span class="x">
    </span><span class="n">req</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">http</span><span class="o">.</span><span class="n">NewRequest</span><span class="p">(</span><span class="s">"GET"</span><span class="p">,</span><span class="x"> </span><span class="s">"https://proview.caqh.org/RosterAPI/api//ProviderStatus"</span><span class="p">,</span><span class="x"> </span><span class="n">data</span><span class="p">)</span><span class="x">
    </span><span class="n">req</span><span class="o">.</span><span class="n">Header</span><span class="x"> </span><span class="o">=</span><span class="x"> </span><span class="n">headers</span><span class="x">

    </span><span class="n">client</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="o">&amp;</span><span class="n">http</span><span class="o">.</span><span class="n">Client</span><span class="p">{}</span><span class="x">
    </span><span class="n">resp</span><span class="p">,</span><span class="x"> </span><span class="n">err</span><span class="x"> </span><span class="o">:=</span><span class="x"> </span><span class="n">client</span><span class="o">.</span><span class="n">Do</span><span class="p">(</span><span class="n">req</span><span class="p">)</span><span class="x">
    </span><span class="c">// ...</span><span class="x">
</span><span class="p">}</span><span class="x">

</span></code></pre>
<p><code>GET /ProviderStatus</code></p>

<p>The ProView Status Check API web service can be used by Participating Organizations to view the status of providers in CAQH ProView. Before requesting ProView Status Check API access, POs should have a business case and an existing application with which to consume and use the web service. The ProView Status Check API accepts one provider at a time.</p>

<h3 id="get-providerstatus-parameters">Parameters</h3>

<table><thead>
<tr>
<th>Parameter</th>
<th>In</th>
<th>Type</th>
<th>Required</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>Product</td>
<td>query</td>
<td>string</td>
<td>true</td>
<td>none</td>
</tr>
<tr>
<td>Caqh_Provider_Id</td>
<td>query</td>
<td>string</td>
<td>true</td>
<td>none</td>
</tr>
<tr>
<td>Organization_id</td>
<td>query</td>
<td>string</td>
<td>true</td>
<td>none</td>
</tr>
<tr>
<td>Content-Type</td>
<td>header</td>
<td>string</td>
<td>true</td>
<td>none</td>
</tr>
</tbody></table>
<h4 id='enumerated-values'>Enumerated Values</h4>
<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td>Product</td>
<td>PV</td>
</tr>
<tr>
<td>Content-Type</td>
<td>application/json</td>
</tr>
</tbody></table>

<blockquote>
<p>Example responses</p>

<p>200 Response</p>
</blockquote>

<h3 id="get-providerstatus-responses">Responses</h3>

<table><thead>
<tr>
<th>Status</th>
<th>Meaning</th>
<th>Description</th>
<th>Schema</th>
</tr>
</thead><tbody>
<tr>
<td>200</td>
<td><a href="https://tools.ietf.org/html/rfc7231#section-6.3.1">OK</a></td>
<td>The system will immediately respond with the status of a provider, or indicate that a provider could not be found with Provider_Found_Flag equal to â€œNâ€.</td>
<td>Inline</td>
</tr>
</tbody></table>

<h3 id="get-providerstatus-responseschema">Response Schema</h3>

<p>Status Code <strong>200</strong></p>

<p><em>StatusCheckResponse</em></p>

<table><thead>
<tr>
<th>Name</th>
<th>Type</th>
<th>Required</th>
<th>Restrictions</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>Â» Organization_ID</td>
<td>integer(int32)</td>
<td>false</td>
<td>none</td>
<td>Participating Organizationâ€™s Identifier</td>
</tr>
<tr>
<td>Â» CAQH_Provider_ID</td>
<td>integer(int32)</td>
<td>false</td>
<td>none</td>
<td>The field denotes the CAQH assigned provider Identifier.</td>
</tr>
<tr>
<td>Â» PO_Provider_ID</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>Providerâ€™s Identifier internal to the Participating Organization</td>
</tr>
<tr>
<td>Â» Roster_Status</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>Status of the provider on the Planâ€™s current roster. Valid Values: â€˜ACTIVEâ€™</td>
</tr>
<tr>
<td>Â» Authorization_Flag</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>A flag that denotes if the provider has authorized the health plan to view data. Valid values are â€˜Yâ€™ and â€˜Nâ€™</td>
</tr>
<tr>
<td>Â» Provider_Status</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>The status of the provider in ProView.</td>
</tr>
<tr>
<td>Â» Provider_Status_Date</td>
<td>string(date)</td>
<td>false</td>
<td>none</td>
<td>Date provider reached the CAQH Provider Status (Format: YYYYMMDD)</td>
</tr>
<tr>
<td>Â» Provider_Practice_State</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>This is the primary practice state of the provider.</td>
</tr>
<tr>
<td>Â» Provider_Found_Flag</td>
<td>string</td>
<td>false</td>
<td>none</td>
<td>A flag that denotes if the provider is found in the system. Valid values are â€˜Yâ€™ and â€˜Nâ€™</td>
</tr>
</tbody></table>
<h4 id='enumerated-values-2'>Enumerated Values</h4>
<table><thead>
<tr>
<th>Property</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td>Authorization_Flag</td>
<td>Y</td>
</tr>
<tr>
<td>Authorization_Flag</td>
<td>N</td>
</tr>
<tr>
<td>Provider_Found_Flag</td>
<td>N</td>
</tr>
<tr>
<td>Provider_Found_Flag</td>
<td>Y</td>
</tr>
</tbody></table>

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
Authorization
</aside>
